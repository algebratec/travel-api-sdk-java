/*
 * Algebratec API
 * Learn and test our api with ease
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@algebratec.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.FlightBaseTraveller;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.LocalDate;
/**
 * FlightTraveller
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-12-25T11:48:12.193Z[GMT]")
public class FlightTraveller extends FlightBaseTraveller {
  @SerializedName("specialService")
  private String specialService = null;

  @SerializedName("infant")
  private FlightBaseTraveller infant = null;

  public FlightTraveller specialService(String specialService) {
    this.specialService = specialService;
    return this;
  }

   /**
   * Get specialService
   * @return specialService
  **/
  @Schema(description = "")
  public String getSpecialService() {
    return specialService;
  }

  public void setSpecialService(String specialService) {
    this.specialService = specialService;
  }

  public FlightTraveller infant(FlightBaseTraveller infant) {
    this.infant = infant;
    return this;
  }

   /**
   * Get infant
   * @return infant
  **/
  @Schema(description = "")
  public FlightBaseTraveller getInfant() {
    return infant;
  }

  public void setInfant(FlightBaseTraveller infant) {
    this.infant = infant;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlightTraveller flightTraveller = (FlightTraveller) o;
    return Objects.equals(this.specialService, flightTraveller.specialService) &&
        Objects.equals(this.infant, flightTraveller.infant) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(specialService, infant, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlightTraveller {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    specialService: ").append(toIndentedString(specialService)).append("\n");
    sb.append("    infant: ").append(toIndentedString(infant)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
