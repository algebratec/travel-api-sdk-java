/*
 * Algebratec API
 * Learn and test our api with ease
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@algebratec.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * FlightFare
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-12-25T11:48:12.193Z[GMT]")
public class FlightFare {
  @SerializedName("allowMinorSinglePassenger")
  private Boolean allowMinorSinglePassenger = null;

  @SerializedName("canBeBookedOnhold")
  private Boolean canBeBookedOnhold = null;

  @SerializedName("canBeVoided")
  private Boolean canBeVoided = null;

  @SerializedName("isBookable")
  private Boolean isBookable = null;

  @SerializedName("paxNameCharacterLimit")
  private Integer paxNameCharacterLimit = null;

  @SerializedName("paxNameCharacterLimitINF")
  private Integer paxNameCharacterLimitINF = null;

  public FlightFare allowMinorSinglePassenger(Boolean allowMinorSinglePassenger) {
    this.allowMinorSinglePassenger = allowMinorSinglePassenger;
    return this;
  }

   /**
   * Get allowMinorSinglePassenger
   * @return allowMinorSinglePassenger
  **/
  @Schema(description = "")
  public Boolean isAllowMinorSinglePassenger() {
    return allowMinorSinglePassenger;
  }

  public void setAllowMinorSinglePassenger(Boolean allowMinorSinglePassenger) {
    this.allowMinorSinglePassenger = allowMinorSinglePassenger;
  }

  public FlightFare canBeBookedOnhold(Boolean canBeBookedOnhold) {
    this.canBeBookedOnhold = canBeBookedOnhold;
    return this;
  }

   /**
   * Get canBeBookedOnhold
   * @return canBeBookedOnhold
  **/
  @Schema(description = "")
  public Boolean isCanBeBookedOnhold() {
    return canBeBookedOnhold;
  }

  public void setCanBeBookedOnhold(Boolean canBeBookedOnhold) {
    this.canBeBookedOnhold = canBeBookedOnhold;
  }

  public FlightFare canBeVoided(Boolean canBeVoided) {
    this.canBeVoided = canBeVoided;
    return this;
  }

   /**
   * Get canBeVoided
   * @return canBeVoided
  **/
  @Schema(description = "")
  public Boolean isCanBeVoided() {
    return canBeVoided;
  }

  public void setCanBeVoided(Boolean canBeVoided) {
    this.canBeVoided = canBeVoided;
  }

  public FlightFare isBookable(Boolean isBookable) {
    this.isBookable = isBookable;
    return this;
  }

   /**
   * Get isBookable
   * @return isBookable
  **/
  @Schema(description = "")
  public Boolean isIsBookable() {
    return isBookable;
  }

  public void setIsBookable(Boolean isBookable) {
    this.isBookable = isBookable;
  }

  public FlightFare paxNameCharacterLimit(Integer paxNameCharacterLimit) {
    this.paxNameCharacterLimit = paxNameCharacterLimit;
    return this;
  }

   /**
   * Get paxNameCharacterLimit
   * @return paxNameCharacterLimit
  **/
  @Schema(description = "")
  public Integer getPaxNameCharacterLimit() {
    return paxNameCharacterLimit;
  }

  public void setPaxNameCharacterLimit(Integer paxNameCharacterLimit) {
    this.paxNameCharacterLimit = paxNameCharacterLimit;
  }

  public FlightFare paxNameCharacterLimitINF(Integer paxNameCharacterLimitINF) {
    this.paxNameCharacterLimitINF = paxNameCharacterLimitINF;
    return this;
  }

   /**
   * Get paxNameCharacterLimitINF
   * @return paxNameCharacterLimitINF
  **/
  @Schema(description = "")
  public Integer getPaxNameCharacterLimitINF() {
    return paxNameCharacterLimitINF;
  }

  public void setPaxNameCharacterLimitINF(Integer paxNameCharacterLimitINF) {
    this.paxNameCharacterLimitINF = paxNameCharacterLimitINF;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlightFare flightFare = (FlightFare) o;
    return Objects.equals(this.allowMinorSinglePassenger, flightFare.allowMinorSinglePassenger) &&
        Objects.equals(this.canBeBookedOnhold, flightFare.canBeBookedOnhold) &&
        Objects.equals(this.canBeVoided, flightFare.canBeVoided) &&
        Objects.equals(this.isBookable, flightFare.isBookable) &&
        Objects.equals(this.paxNameCharacterLimit, flightFare.paxNameCharacterLimit) &&
        Objects.equals(this.paxNameCharacterLimitINF, flightFare.paxNameCharacterLimitINF);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowMinorSinglePassenger, canBeBookedOnhold, canBeVoided, isBookable, paxNameCharacterLimit, paxNameCharacterLimitINF);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlightFare {\n");
    
    sb.append("    allowMinorSinglePassenger: ").append(toIndentedString(allowMinorSinglePassenger)).append("\n");
    sb.append("    canBeBookedOnhold: ").append(toIndentedString(canBeBookedOnhold)).append("\n");
    sb.append("    canBeVoided: ").append(toIndentedString(canBeVoided)).append("\n");
    sb.append("    isBookable: ").append(toIndentedString(isBookable)).append("\n");
    sb.append("    paxNameCharacterLimit: ").append(toIndentedString(paxNameCharacterLimit)).append("\n");
    sb.append("    paxNameCharacterLimitINF: ").append(toIndentedString(paxNameCharacterLimitINF)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
