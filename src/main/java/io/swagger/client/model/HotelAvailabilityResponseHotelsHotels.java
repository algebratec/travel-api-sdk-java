/*
 * Algebratec API
 * Learn and test our api with ease
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@algebratec.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.HotelAvailabilityResponseHotelsAccommodations;
import io.swagger.client.model.HotelAvailabilityResponseHotelsCombinations;
import io.swagger.client.model.HotelAvailabilityResponseHotelsExtras;
import io.swagger.client.model.HotelAvailabilityResponseHotelsImages;
import io.swagger.client.model.HotelAvailabilityResponseHotelsRooms;
import io.swagger.client.model.HotelAvailabilityResponseHotelsThemes;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * HotelAvailabilityResponseHotelsHotels
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-12-24T22:56:10.425Z[GMT]")
public class HotelAvailabilityResponseHotelsHotels {
  @SerializedName("code")
  private String code = null;

  @SerializedName("contractCode")
  private String contractCode = null;

  @SerializedName("supplierCode")
  private String supplierCode = null;

  @SerializedName("country")
  private String country = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("providerName")
  private String providerName = null;

  @SerializedName("address")
  private String address = null;

  @SerializedName("phone")
  private String phone = null;

  @SerializedName("mail")
  private String mail = null;

  @SerializedName("fax")
  private String fax = null;

  @SerializedName("image")
  private String image = null;

  @SerializedName("images")
  private List<HotelAvailabilityResponseHotelsImages> images = null;

  @SerializedName("zoneCode")
  private String zoneCode = null;

  /**
   * Gets or Sets category
   */
  @JsonAdapter(CategoryEnum.Adapter.class)
  public enum CategoryEnum {
    _1EST("1est"),
    _2EST("2est"),
    _3SET("3set"),
    _4EST("4est"),
    _5EST("5est");

    private String value;

    CategoryEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static CategoryEnum fromValue(String text) {
      for (CategoryEnum b : CategoryEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<CategoryEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CategoryEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CategoryEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return CategoryEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("category")
  private CategoryEnum category = null;

  @SerializedName("zoneName")
  private String zoneName = null;

  @SerializedName("comments")
  private String comments = null;

  @SerializedName("latitude")
  private String latitude = null;

  @SerializedName("longitude")
  private String longitude = null;

  @SerializedName("rooms")
  private List<HotelAvailabilityResponseHotelsRooms> rooms = null;

  @SerializedName("accommodations")
  private List<HotelAvailabilityResponseHotelsAccommodations> accommodations = null;

  @SerializedName("themes")
  private List<HotelAvailabilityResponseHotelsThemes> themes = null;

  @SerializedName("facilities")
  private List<HotelAvailabilityResponseHotelsThemes> facilities = null;

  @SerializedName("prohibitions")
  private List<HotelAvailabilityResponseHotelsThemes> prohibitions = null;

  @SerializedName("Extras")
  private List<HotelAvailabilityResponseHotelsExtras> extras = null;

  @SerializedName("Combinations")
  private List<HotelAvailabilityResponseHotelsCombinations> combinations = null;

  /**
   * Gets or Sets currency
   */
  @JsonAdapter(CurrencyEnum.Adapter.class)
  public enum CurrencyEnum {
    DZD("DZD"),
    EUR("EUR"),
    DTN("DTN");

    private String value;

    CurrencyEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static CurrencyEnum fromValue(String text) {
      for (CurrencyEnum b : CurrencyEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<CurrencyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CurrencyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CurrencyEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return CurrencyEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("currency")
  private CurrencyEnum currency = null;

  public HotelAvailabilityResponseHotelsHotels code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @Schema(description = "")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public HotelAvailabilityResponseHotelsHotels contractCode(String contractCode) {
    this.contractCode = contractCode;
    return this;
  }

   /**
   * Get contractCode
   * @return contractCode
  **/
  @Schema(description = "")
  public String getContractCode() {
    return contractCode;
  }

  public void setContractCode(String contractCode) {
    this.contractCode = contractCode;
  }

  public HotelAvailabilityResponseHotelsHotels supplierCode(String supplierCode) {
    this.supplierCode = supplierCode;
    return this;
  }

   /**
   * Get supplierCode
   * @return supplierCode
  **/
  @Schema(description = "")
  public String getSupplierCode() {
    return supplierCode;
  }

  public void setSupplierCode(String supplierCode) {
    this.supplierCode = supplierCode;
  }

  public HotelAvailabilityResponseHotelsHotels country(String country) {
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @Schema(description = "")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public HotelAvailabilityResponseHotelsHotels name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public HotelAvailabilityResponseHotelsHotels description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public HotelAvailabilityResponseHotelsHotels providerName(String providerName) {
    this.providerName = providerName;
    return this;
  }

   /**
   * Get providerName
   * @return providerName
  **/
  @Schema(description = "")
  public String getProviderName() {
    return providerName;
  }

  public void setProviderName(String providerName) {
    this.providerName = providerName;
  }

  public HotelAvailabilityResponseHotelsHotels address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @Schema(description = "")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public HotelAvailabilityResponseHotelsHotels phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @Schema(description = "")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public HotelAvailabilityResponseHotelsHotels mail(String mail) {
    this.mail = mail;
    return this;
  }

   /**
   * Get mail
   * @return mail
  **/
  @Schema(description = "")
  public String getMail() {
    return mail;
  }

  public void setMail(String mail) {
    this.mail = mail;
  }

  public HotelAvailabilityResponseHotelsHotels fax(String fax) {
    this.fax = fax;
    return this;
  }

   /**
   * Get fax
   * @return fax
  **/
  @Schema(description = "")
  public String getFax() {
    return fax;
  }

  public void setFax(String fax) {
    this.fax = fax;
  }

  public HotelAvailabilityResponseHotelsHotels image(String image) {
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @Schema(description = "")
  public String getImage() {
    return image;
  }

  public void setImage(String image) {
    this.image = image;
  }

  public HotelAvailabilityResponseHotelsHotels images(List<HotelAvailabilityResponseHotelsImages> images) {
    this.images = images;
    return this;
  }

  public HotelAvailabilityResponseHotelsHotels addImagesItem(HotelAvailabilityResponseHotelsImages imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<HotelAvailabilityResponseHotelsImages>();
    }
    this.images.add(imagesItem);
    return this;
  }

   /**
   * Get images
   * @return images
  **/
  @Schema(description = "")
  public List<HotelAvailabilityResponseHotelsImages> getImages() {
    return images;
  }

  public void setImages(List<HotelAvailabilityResponseHotelsImages> images) {
    this.images = images;
  }

  public HotelAvailabilityResponseHotelsHotels zoneCode(String zoneCode) {
    this.zoneCode = zoneCode;
    return this;
  }

   /**
   * Get zoneCode
   * @return zoneCode
  **/
  @Schema(description = "")
  public String getZoneCode() {
    return zoneCode;
  }

  public void setZoneCode(String zoneCode) {
    this.zoneCode = zoneCode;
  }

  public HotelAvailabilityResponseHotelsHotels category(CategoryEnum category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @Schema(description = "")
  public CategoryEnum getCategory() {
    return category;
  }

  public void setCategory(CategoryEnum category) {
    this.category = category;
  }

  public HotelAvailabilityResponseHotelsHotels zoneName(String zoneName) {
    this.zoneName = zoneName;
    return this;
  }

   /**
   * Get zoneName
   * @return zoneName
  **/
  @Schema(description = "")
  public String getZoneName() {
    return zoneName;
  }

  public void setZoneName(String zoneName) {
    this.zoneName = zoneName;
  }

  public HotelAvailabilityResponseHotelsHotels comments(String comments) {
    this.comments = comments;
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @Schema(description = "")
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }

  public HotelAvailabilityResponseHotelsHotels latitude(String latitude) {
    this.latitude = latitude;
    return this;
  }

   /**
   * Get latitude
   * @return latitude
  **/
  @Schema(description = "")
  public String getLatitude() {
    return latitude;
  }

  public void setLatitude(String latitude) {
    this.latitude = latitude;
  }

  public HotelAvailabilityResponseHotelsHotels longitude(String longitude) {
    this.longitude = longitude;
    return this;
  }

   /**
   * Get longitude
   * @return longitude
  **/
  @Schema(description = "")
  public String getLongitude() {
    return longitude;
  }

  public void setLongitude(String longitude) {
    this.longitude = longitude;
  }

  public HotelAvailabilityResponseHotelsHotels rooms(List<HotelAvailabilityResponseHotelsRooms> rooms) {
    this.rooms = rooms;
    return this;
  }

  public HotelAvailabilityResponseHotelsHotels addRoomsItem(HotelAvailabilityResponseHotelsRooms roomsItem) {
    if (this.rooms == null) {
      this.rooms = new ArrayList<HotelAvailabilityResponseHotelsRooms>();
    }
    this.rooms.add(roomsItem);
    return this;
  }

   /**
   * Get rooms
   * @return rooms
  **/
  @Schema(description = "")
  public List<HotelAvailabilityResponseHotelsRooms> getRooms() {
    return rooms;
  }

  public void setRooms(List<HotelAvailabilityResponseHotelsRooms> rooms) {
    this.rooms = rooms;
  }

  public HotelAvailabilityResponseHotelsHotels accommodations(List<HotelAvailabilityResponseHotelsAccommodations> accommodations) {
    this.accommodations = accommodations;
    return this;
  }

  public HotelAvailabilityResponseHotelsHotels addAccommodationsItem(HotelAvailabilityResponseHotelsAccommodations accommodationsItem) {
    if (this.accommodations == null) {
      this.accommodations = new ArrayList<HotelAvailabilityResponseHotelsAccommodations>();
    }
    this.accommodations.add(accommodationsItem);
    return this;
  }

   /**
   * Get accommodations
   * @return accommodations
  **/
  @Schema(description = "")
  public List<HotelAvailabilityResponseHotelsAccommodations> getAccommodations() {
    return accommodations;
  }

  public void setAccommodations(List<HotelAvailabilityResponseHotelsAccommodations> accommodations) {
    this.accommodations = accommodations;
  }

  public HotelAvailabilityResponseHotelsHotels themes(List<HotelAvailabilityResponseHotelsThemes> themes) {
    this.themes = themes;
    return this;
  }

  public HotelAvailabilityResponseHotelsHotels addThemesItem(HotelAvailabilityResponseHotelsThemes themesItem) {
    if (this.themes == null) {
      this.themes = new ArrayList<HotelAvailabilityResponseHotelsThemes>();
    }
    this.themes.add(themesItem);
    return this;
  }

   /**
   * Get themes
   * @return themes
  **/
  @Schema(description = "")
  public List<HotelAvailabilityResponseHotelsThemes> getThemes() {
    return themes;
  }

  public void setThemes(List<HotelAvailabilityResponseHotelsThemes> themes) {
    this.themes = themes;
  }

  public HotelAvailabilityResponseHotelsHotels facilities(List<HotelAvailabilityResponseHotelsThemes> facilities) {
    this.facilities = facilities;
    return this;
  }

  public HotelAvailabilityResponseHotelsHotels addFacilitiesItem(HotelAvailabilityResponseHotelsThemes facilitiesItem) {
    if (this.facilities == null) {
      this.facilities = new ArrayList<HotelAvailabilityResponseHotelsThemes>();
    }
    this.facilities.add(facilitiesItem);
    return this;
  }

   /**
   * Get facilities
   * @return facilities
  **/
  @Schema(description = "")
  public List<HotelAvailabilityResponseHotelsThemes> getFacilities() {
    return facilities;
  }

  public void setFacilities(List<HotelAvailabilityResponseHotelsThemes> facilities) {
    this.facilities = facilities;
  }

  public HotelAvailabilityResponseHotelsHotels prohibitions(List<HotelAvailabilityResponseHotelsThemes> prohibitions) {
    this.prohibitions = prohibitions;
    return this;
  }

  public HotelAvailabilityResponseHotelsHotels addProhibitionsItem(HotelAvailabilityResponseHotelsThemes prohibitionsItem) {
    if (this.prohibitions == null) {
      this.prohibitions = new ArrayList<HotelAvailabilityResponseHotelsThemes>();
    }
    this.prohibitions.add(prohibitionsItem);
    return this;
  }

   /**
   * Get prohibitions
   * @return prohibitions
  **/
  @Schema(description = "")
  public List<HotelAvailabilityResponseHotelsThemes> getProhibitions() {
    return prohibitions;
  }

  public void setProhibitions(List<HotelAvailabilityResponseHotelsThemes> prohibitions) {
    this.prohibitions = prohibitions;
  }

  public HotelAvailabilityResponseHotelsHotels extras(List<HotelAvailabilityResponseHotelsExtras> extras) {
    this.extras = extras;
    return this;
  }

  public HotelAvailabilityResponseHotelsHotels addExtrasItem(HotelAvailabilityResponseHotelsExtras extrasItem) {
    if (this.extras == null) {
      this.extras = new ArrayList<HotelAvailabilityResponseHotelsExtras>();
    }
    this.extras.add(extrasItem);
    return this;
  }

   /**
   * Get extras
   * @return extras
  **/
  @Schema(description = "")
  public List<HotelAvailabilityResponseHotelsExtras> getExtras() {
    return extras;
  }

  public void setExtras(List<HotelAvailabilityResponseHotelsExtras> extras) {
    this.extras = extras;
  }

  public HotelAvailabilityResponseHotelsHotels combinations(List<HotelAvailabilityResponseHotelsCombinations> combinations) {
    this.combinations = combinations;
    return this;
  }

  public HotelAvailabilityResponseHotelsHotels addCombinationsItem(HotelAvailabilityResponseHotelsCombinations combinationsItem) {
    if (this.combinations == null) {
      this.combinations = new ArrayList<HotelAvailabilityResponseHotelsCombinations>();
    }
    this.combinations.add(combinationsItem);
    return this;
  }

   /**
   * Get combinations
   * @return combinations
  **/
  @Schema(description = "")
  public List<HotelAvailabilityResponseHotelsCombinations> getCombinations() {
    return combinations;
  }

  public void setCombinations(List<HotelAvailabilityResponseHotelsCombinations> combinations) {
    this.combinations = combinations;
  }

  public HotelAvailabilityResponseHotelsHotels currency(CurrencyEnum currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @Schema(description = "")
  public CurrencyEnum getCurrency() {
    return currency;
  }

  public void setCurrency(CurrencyEnum currency) {
    this.currency = currency;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HotelAvailabilityResponseHotelsHotels hotelAvailabilityResponseHotelsHotels = (HotelAvailabilityResponseHotelsHotels) o;
    return Objects.equals(this.code, hotelAvailabilityResponseHotelsHotels.code) &&
        Objects.equals(this.contractCode, hotelAvailabilityResponseHotelsHotels.contractCode) &&
        Objects.equals(this.supplierCode, hotelAvailabilityResponseHotelsHotels.supplierCode) &&
        Objects.equals(this.country, hotelAvailabilityResponseHotelsHotels.country) &&
        Objects.equals(this.name, hotelAvailabilityResponseHotelsHotels.name) &&
        Objects.equals(this.description, hotelAvailabilityResponseHotelsHotels.description) &&
        Objects.equals(this.providerName, hotelAvailabilityResponseHotelsHotels.providerName) &&
        Objects.equals(this.address, hotelAvailabilityResponseHotelsHotels.address) &&
        Objects.equals(this.phone, hotelAvailabilityResponseHotelsHotels.phone) &&
        Objects.equals(this.mail, hotelAvailabilityResponseHotelsHotels.mail) &&
        Objects.equals(this.fax, hotelAvailabilityResponseHotelsHotels.fax) &&
        Objects.equals(this.image, hotelAvailabilityResponseHotelsHotels.image) &&
        Objects.equals(this.images, hotelAvailabilityResponseHotelsHotels.images) &&
        Objects.equals(this.zoneCode, hotelAvailabilityResponseHotelsHotels.zoneCode) &&
        Objects.equals(this.category, hotelAvailabilityResponseHotelsHotels.category) &&
        Objects.equals(this.zoneName, hotelAvailabilityResponseHotelsHotels.zoneName) &&
        Objects.equals(this.comments, hotelAvailabilityResponseHotelsHotels.comments) &&
        Objects.equals(this.latitude, hotelAvailabilityResponseHotelsHotels.latitude) &&
        Objects.equals(this.longitude, hotelAvailabilityResponseHotelsHotels.longitude) &&
        Objects.equals(this.rooms, hotelAvailabilityResponseHotelsHotels.rooms) &&
        Objects.equals(this.accommodations, hotelAvailabilityResponseHotelsHotels.accommodations) &&
        Objects.equals(this.themes, hotelAvailabilityResponseHotelsHotels.themes) &&
        Objects.equals(this.facilities, hotelAvailabilityResponseHotelsHotels.facilities) &&
        Objects.equals(this.prohibitions, hotelAvailabilityResponseHotelsHotels.prohibitions) &&
        Objects.equals(this.extras, hotelAvailabilityResponseHotelsHotels.extras) &&
        Objects.equals(this.combinations, hotelAvailabilityResponseHotelsHotels.combinations) &&
        Objects.equals(this.currency, hotelAvailabilityResponseHotelsHotels.currency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, contractCode, supplierCode, country, name, description, providerName, address, phone, mail, fax, image, images, zoneCode, category, zoneName, comments, latitude, longitude, rooms, accommodations, themes, facilities, prohibitions, extras, combinations, currency);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HotelAvailabilityResponseHotelsHotels {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    contractCode: ").append(toIndentedString(contractCode)).append("\n");
    sb.append("    supplierCode: ").append(toIndentedString(supplierCode)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    providerName: ").append(toIndentedString(providerName)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    mail: ").append(toIndentedString(mail)).append("\n");
    sb.append("    fax: ").append(toIndentedString(fax)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("    zoneCode: ").append(toIndentedString(zoneCode)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    zoneName: ").append(toIndentedString(zoneName)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    rooms: ").append(toIndentedString(rooms)).append("\n");
    sb.append("    accommodations: ").append(toIndentedString(accommodations)).append("\n");
    sb.append("    themes: ").append(toIndentedString(themes)).append("\n");
    sb.append("    facilities: ").append(toIndentedString(facilities)).append("\n");
    sb.append("    prohibitions: ").append(toIndentedString(prohibitions)).append("\n");
    sb.append("    extras: ").append(toIndentedString(extras)).append("\n");
    sb.append("    combinations: ").append(toIndentedString(combinations)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
