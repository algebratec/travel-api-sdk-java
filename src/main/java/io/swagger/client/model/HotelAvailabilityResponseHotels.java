/*
 * Algebratec API
 * Learn and test our api with ease
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@algebratec.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.HotelAvailabilityResponseHotelsHotels;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;
/**
 * HotelAvailabilityResponseHotels
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-12-24T22:56:10.425Z[GMT]")
public class HotelAvailabilityResponseHotels {
  @SerializedName("hotels")
  private List<HotelAvailabilityResponseHotelsHotels> hotels = null;

  @SerializedName("checkIn")
  private LocalDate checkIn = null;

  @SerializedName("checkOut")
  private LocalDate checkOut = null;

  @SerializedName("total")
  private Integer total = null;

  public HotelAvailabilityResponseHotels hotels(List<HotelAvailabilityResponseHotelsHotels> hotels) {
    this.hotels = hotels;
    return this;
  }

  public HotelAvailabilityResponseHotels addHotelsItem(HotelAvailabilityResponseHotelsHotels hotelsItem) {
    if (this.hotels == null) {
      this.hotels = new ArrayList<HotelAvailabilityResponseHotelsHotels>();
    }
    this.hotels.add(hotelsItem);
    return this;
  }

   /**
   * Get hotels
   * @return hotels
  **/
  @Schema(description = "")
  public List<HotelAvailabilityResponseHotelsHotels> getHotels() {
    return hotels;
  }

  public void setHotels(List<HotelAvailabilityResponseHotelsHotels> hotels) {
    this.hotels = hotels;
  }

  public HotelAvailabilityResponseHotels checkIn(LocalDate checkIn) {
    this.checkIn = checkIn;
    return this;
  }

   /**
   * Get checkIn
   * @return checkIn
  **/
  @Schema(description = "")
  public LocalDate getCheckIn() {
    return checkIn;
  }

  public void setCheckIn(LocalDate checkIn) {
    this.checkIn = checkIn;
  }

  public HotelAvailabilityResponseHotels checkOut(LocalDate checkOut) {
    this.checkOut = checkOut;
    return this;
  }

   /**
   * Get checkOut
   * @return checkOut
  **/
  @Schema(description = "")
  public LocalDate getCheckOut() {
    return checkOut;
  }

  public void setCheckOut(LocalDate checkOut) {
    this.checkOut = checkOut;
  }

  public HotelAvailabilityResponseHotels total(Integer total) {
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @Schema(description = "")
  public Integer getTotal() {
    return total;
  }

  public void setTotal(Integer total) {
    this.total = total;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HotelAvailabilityResponseHotels hotelAvailabilityResponseHotels = (HotelAvailabilityResponseHotels) o;
    return Objects.equals(this.hotels, hotelAvailabilityResponseHotels.hotels) &&
        Objects.equals(this.checkIn, hotelAvailabilityResponseHotels.checkIn) &&
        Objects.equals(this.checkOut, hotelAvailabilityResponseHotels.checkOut) &&
        Objects.equals(this.total, hotelAvailabilityResponseHotels.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hotels, checkIn, checkOut, total);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HotelAvailabilityResponseHotels {\n");
    
    sb.append("    hotels: ").append(toIndentedString(hotels)).append("\n");
    sb.append("    checkIn: ").append(toIndentedString(checkIn)).append("\n");
    sb.append("    checkOut: ").append(toIndentedString(checkOut)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
