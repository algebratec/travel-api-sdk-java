/*
 * Algebratec API
 * Learn and test our api with ease
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@algebratec.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * FlightPaxTypePrice
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-12-25T18:44:13.943Z[GMT]")
public class FlightPaxTypePrice {
  @SerializedName("agency_markup")
  private BigDecimal agencyMarkup = null;

  @SerializedName("number")
  private Integer number = null;

  @SerializedName("platform_markup")
  private BigDecimal platformMarkup = null;

  @SerializedName("tax")
  private Integer tax = null;

  @SerializedName("total")
  private Integer total = null;

  public FlightPaxTypePrice agencyMarkup(BigDecimal agencyMarkup) {
    this.agencyMarkup = agencyMarkup;
    return this;
  }

   /**
   * Get agencyMarkup
   * @return agencyMarkup
  **/
  @Schema(description = "")
  public BigDecimal getAgencyMarkup() {
    return agencyMarkup;
  }

  public void setAgencyMarkup(BigDecimal agencyMarkup) {
    this.agencyMarkup = agencyMarkup;
  }

  public FlightPaxTypePrice number(Integer number) {
    this.number = number;
    return this;
  }

   /**
   * Get number
   * @return number
  **/
  @Schema(description = "")
  public Integer getNumber() {
    return number;
  }

  public void setNumber(Integer number) {
    this.number = number;
  }

  public FlightPaxTypePrice platformMarkup(BigDecimal platformMarkup) {
    this.platformMarkup = platformMarkup;
    return this;
  }

   /**
   * Get platformMarkup
   * @return platformMarkup
  **/
  @Schema(description = "")
  public BigDecimal getPlatformMarkup() {
    return platformMarkup;
  }

  public void setPlatformMarkup(BigDecimal platformMarkup) {
    this.platformMarkup = platformMarkup;
  }

  public FlightPaxTypePrice tax(Integer tax) {
    this.tax = tax;
    return this;
  }

   /**
   * Get tax
   * @return tax
  **/
  @Schema(description = "")
  public Integer getTax() {
    return tax;
  }

  public void setTax(Integer tax) {
    this.tax = tax;
  }

  public FlightPaxTypePrice total(Integer total) {
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @Schema(description = "")
  public Integer getTotal() {
    return total;
  }

  public void setTotal(Integer total) {
    this.total = total;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlightPaxTypePrice flightPaxTypePrice = (FlightPaxTypePrice) o;
    return Objects.equals(this.agencyMarkup, flightPaxTypePrice.agencyMarkup) &&
        Objects.equals(this.number, flightPaxTypePrice.number) &&
        Objects.equals(this.platformMarkup, flightPaxTypePrice.platformMarkup) &&
        Objects.equals(this.tax, flightPaxTypePrice.tax) &&
        Objects.equals(this.total, flightPaxTypePrice.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agencyMarkup, number, platformMarkup, tax, total);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlightPaxTypePrice {\n");
    
    sb.append("    agencyMarkup: ").append(toIndentedString(agencyMarkup)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    platformMarkup: ").append(toIndentedString(platformMarkup)).append("\n");
    sb.append("    tax: ").append(toIndentedString(tax)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
