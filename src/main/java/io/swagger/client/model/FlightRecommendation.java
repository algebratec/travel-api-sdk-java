/*
 * Algebratec API
 * Learn and test our api with ease
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@algebratec.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.FlightAvailabilityFareDetails;
import io.swagger.client.model.FlightAvailabilitySubRecommendation;
import io.swagger.client.model.FlightBaggageAllowance;
import io.swagger.client.model.FlightDetailedPrice;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * FlightRecommendation
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-12-25T11:48:12.193Z[GMT]")
public class FlightRecommendation {
  @SerializedName("providerCode")
  private String providerCode = null;

  @SerializedName("baggage")
  private FlightBaggageAllowance baggage = null;

  @SerializedName("bookingKey")
  private String bookingKey = null;

  @SerializedName("fareDetails")
  private List<List<FlightAvailabilityFareDetails>> fareDetails = null;

  @SerializedName("flights")
  private List<List<Integer>> flights = null;

  @SerializedName("price")
  private FlightDetailedPrice price = null;

  @SerializedName("subRecommendations")
  private List<List<FlightAvailabilitySubRecommendation>> subRecommendations = null;

  @SerializedName("validatingCarrier")
  private String validatingCarrier = null;

  public FlightRecommendation providerCode(String providerCode) {
    this.providerCode = providerCode;
    return this;
  }

   /**
   * Get providerCode
   * @return providerCode
  **/
  @Schema(description = "")
  public String getProviderCode() {
    return providerCode;
  }

  public void setProviderCode(String providerCode) {
    this.providerCode = providerCode;
  }

  public FlightRecommendation baggage(FlightBaggageAllowance baggage) {
    this.baggage = baggage;
    return this;
  }

   /**
   * Get baggage
   * @return baggage
  **/
  @Schema(description = "")
  public FlightBaggageAllowance getBaggage() {
    return baggage;
  }

  public void setBaggage(FlightBaggageAllowance baggage) {
    this.baggage = baggage;
  }

  public FlightRecommendation bookingKey(String bookingKey) {
    this.bookingKey = bookingKey;
    return this;
  }

   /**
   * Get bookingKey
   * @return bookingKey
  **/
  @Schema(description = "")
  public String getBookingKey() {
    return bookingKey;
  }

  public void setBookingKey(String bookingKey) {
    this.bookingKey = bookingKey;
  }

  public FlightRecommendation fareDetails(List<List<FlightAvailabilityFareDetails>> fareDetails) {
    this.fareDetails = fareDetails;
    return this;
  }

  public FlightRecommendation addFareDetailsItem(List<FlightAvailabilityFareDetails> fareDetailsItem) {
    if (this.fareDetails == null) {
      this.fareDetails = new ArrayList<List<FlightAvailabilityFareDetails>>();
    }
    this.fareDetails.add(fareDetailsItem);
    return this;
  }

   /**
   * Get fareDetails
   * @return fareDetails
  **/
  @Schema(description = "")
  public List<List<FlightAvailabilityFareDetails>> getFareDetails() {
    return fareDetails;
  }

  public void setFareDetails(List<List<FlightAvailabilityFareDetails>> fareDetails) {
    this.fareDetails = fareDetails;
  }

  public FlightRecommendation flights(List<List<Integer>> flights) {
    this.flights = flights;
    return this;
  }

  public FlightRecommendation addFlightsItem(List<Integer> flightsItem) {
    if (this.flights == null) {
      this.flights = new ArrayList<List<Integer>>();
    }
    this.flights.add(flightsItem);
    return this;
  }

   /**
   * Get flights
   * @return flights
  **/
  @Schema(description = "")
  public List<List<Integer>> getFlights() {
    return flights;
  }

  public void setFlights(List<List<Integer>> flights) {
    this.flights = flights;
  }

  public FlightRecommendation price(FlightDetailedPrice price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @Schema(description = "")
  public FlightDetailedPrice getPrice() {
    return price;
  }

  public void setPrice(FlightDetailedPrice price) {
    this.price = price;
  }

  public FlightRecommendation subRecommendations(List<List<FlightAvailabilitySubRecommendation>> subRecommendations) {
    this.subRecommendations = subRecommendations;
    return this;
  }

  public FlightRecommendation addSubRecommendationsItem(List<FlightAvailabilitySubRecommendation> subRecommendationsItem) {
    if (this.subRecommendations == null) {
      this.subRecommendations = new ArrayList<List<FlightAvailabilitySubRecommendation>>();
    }
    this.subRecommendations.add(subRecommendationsItem);
    return this;
  }

   /**
   * Get subRecommendations
   * @return subRecommendations
  **/
  @Schema(example = "{\"10\":[{\"baggage\":{\"freeAllowance\":30,\"quantityCode\":\"W\",\"unitQualifier\":\"K\",\"withBaggage\":true},\"bounds\":[{\"id\":10},{\"id\":0}],\"fareRules\":[\"TICKETS ARE NON-REFUNDABLE\"]},{\"baggage\":{\"freeAllowance\":30,\"quantityCode\":\"W\",\"unitQualifier\":\"K\",\"withBaggage\":true},\"bounds\":[{\"id\":10},{\"id\":1}],\"fareRules\":[\"TICKETS ARE NON-REFUNDABLE\"]},{\"baggage\":{\"freeAllowance\":30,\"quantityCode\":\"W\",\"unitQualifier\":\"K\",\"withBaggage\":true},\"bounds\":[{\"id\":10},{\"id\":2}],\"fareRules\":[\"TICKETS ARE NON-REFUNDABLE\"]}],\"11\":[{\"baggage\":{\"freeAllowance\":30,\"quantityCode\":\"W\",\"unitQualifier\":\"K\",\"withBaggage\":true},\"bounds\":[{\"id\":11},{\"id\":0}],\"fareRules\":[\"TICKETS ARE NON-REFUNDABLE\"]},{\"baggage\":{\"freeAllowance\":30,\"quantityCode\":\"W\",\"unitQualifier\":\"K\",\"withBaggage\":true},\"bounds\":[{\"id\":11},{\"id\":1}],\"fareRules\":[\"TICKETS ARE NON-REFUNDABLE\"]},{\"baggage\":{\"freeAllowance\":30,\"quantityCode\":\"W\",\"unitQualifier\":\"K\",\"withBaggage\":true},\"bounds\":[{\"id\":11},{\"id\":2}],\"fareRules\":[\"TICKETS ARE NON-REFUNDABLE\"]}]}", description = "")
  public List<List<FlightAvailabilitySubRecommendation>> getSubRecommendations() {
    return subRecommendations;
  }

  public void setSubRecommendations(List<List<FlightAvailabilitySubRecommendation>> subRecommendations) {
    this.subRecommendations = subRecommendations;
  }

  public FlightRecommendation validatingCarrier(String validatingCarrier) {
    this.validatingCarrier = validatingCarrier;
    return this;
  }

   /**
   * Get validatingCarrier
   * @return validatingCarrier
  **/
  @Schema(description = "")
  public String getValidatingCarrier() {
    return validatingCarrier;
  }

  public void setValidatingCarrier(String validatingCarrier) {
    this.validatingCarrier = validatingCarrier;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlightRecommendation flightRecommendation = (FlightRecommendation) o;
    return Objects.equals(this.providerCode, flightRecommendation.providerCode) &&
        Objects.equals(this.baggage, flightRecommendation.baggage) &&
        Objects.equals(this.bookingKey, flightRecommendation.bookingKey) &&
        Objects.equals(this.fareDetails, flightRecommendation.fareDetails) &&
        Objects.equals(this.flights, flightRecommendation.flights) &&
        Objects.equals(this.price, flightRecommendation.price) &&
        Objects.equals(this.subRecommendations, flightRecommendation.subRecommendations) &&
        Objects.equals(this.validatingCarrier, flightRecommendation.validatingCarrier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(providerCode, baggage, bookingKey, fareDetails, flights, price, subRecommendations, validatingCarrier);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlightRecommendation {\n");
    
    sb.append("    providerCode: ").append(toIndentedString(providerCode)).append("\n");
    sb.append("    baggage: ").append(toIndentedString(baggage)).append("\n");
    sb.append("    bookingKey: ").append(toIndentedString(bookingKey)).append("\n");
    sb.append("    fareDetails: ").append(toIndentedString(fareDetails)).append("\n");
    sb.append("    flights: ").append(toIndentedString(flights)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    subRecommendations: ").append(toIndentedString(subRecommendations)).append("\n");
    sb.append("    validatingCarrier: ").append(toIndentedString(validatingCarrier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
